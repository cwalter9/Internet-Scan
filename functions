MYSQLQ="mysql -hrdbhost -uscanuser -pscanpass -Dinternetscan -s"
MYSQLR="mysql -Dinternetscan -s"
cdate=`date +%F`

function fundbcheck {
  dbserial=`echo "select vfield from vars where vname='dbserial'" | $MYSQLQ`
  fcserial=`cat config | grep DatabaseSerial | gawk -F= '{ print $2 }'`

  if [ $dbserial -neq $fcserial ]; then
    dblog dowork "DB is down or wrong"
    funstop $processname
    exit 4
  fi
}

function funproccheck {
  penable=`cat config | grep ProcEnable | gawk -F= '{ print $2 }'`

  if [ $penable -eq 0 ]; then
    dblog dowork "Exiting Processing disabled"
    funstop $processname
    exit 3
  fi
}

function getvar {
  cat config | grep $1 | gawk -F= '{ print $2 }'
}

function dblog {
  echo "insert into log set shid='$shid',pid='$1',entry='$2'" | $MYSQLQ
  echo "delete from log where pid='monitor'" | $MYSQLQ
}

function pstatdblog {
  echo "insert into log set shid='$shid',pid='$1',pstat='$2',ptime='$3',entry='$4'" | $MYSQLQ
}

workdir=`getvar FileWorkDir`

cd $workdir

function checkproxy {
  curl -s -S --connect-timeout 5 -x http://$1 http://www.walternet.com/wtime
}

function funstart {
  stime=`date +%s`
  pstatdblog $1 1 $stime "Start"
  vnamerun=`echo "$processname run" | gawk '{ print $1$2 }'`
  runlimit=`echo "select vfield from vars where vname='$vnamerun'" | $MYSQLQ`
}

function resethost {
  dblog reset "Resetting host $1 for rescan"
  echo "delete from ports where ipaddr='$1'" | $MYSQLQ
  echo "delete from service where ipaddr='$1'" | $MYSQLQ
  ctime=`date +%s`
  echo "update address set status=1,updown=0,utime='$ctime' where ipaddr='$1'" | $MYSQLQ
}

function checkprocess {
  if [ -f $2 ]; then
    dblog $1 "Already running exit 2"
    exit 2
  else
    touch $2
    echo "$$" > $2
  fi
}

function chkmkdir {
  if [ ! -d $1 ]; then
    mkdir $1
  fi
}

function funavgtime {
  licnt=`cat $ptlfile | wc -l`
  secnt=0

  for i in `cat $ptlfile`; do
    secnt=`echo "$secnt + $i" | bc`
  done

  procavgtime=`echo "$secnt / $licnt" | bc`

}

function funproctime {
  ptimemin=`echo "select vfield from vars where vname='ptimemin'" | $MYSQLQ`
  ptimemax=`echo "select vfield from vars where vname='ptimemax'" | $MYSQLQ`
  pmaxloop=`echo "select vfield from vars where vname='pmaxloop'" | $MYSQLQ`
  if [ $procavgtime -lt $ptimemin ]; then
    runlimit=`echo "$runlimit + 1" | bc`
    if [ $runlimit -gt $pmaxloop ]; then
      runlimit=$pmaxloop
    fi
    echo "update vars set vfield=$runlimit where vname='$1'" | $MYSQLQ
  fi

  if [ $procavgtime -gt $ptimemax ]; then
    runlimit=`echo "$runlimit - 1" | bc`
    if [ $runlimit -lt 1 ]; then
      runlimit=1
    fi
    echo "update vars set vfield=$runlimit where vname='$1'" | $MYSQLQ
  fi
}

function funcleanptimefile {
  licnt=`cat $ptlfile | wc -l`
  timelicnt=`echo "select vfield from vars where vname='timelines'" | $MYSQLQ`

  while [ $licnt -gt $timelicnt ]; do
    sed -i -e '1d' $ptlfile
    licnt=`cat $ptlfile | wc -l`
  done
}

function funstop {
  ftime=`date +%s`
  totime=`echo "$ftime - $stime" | bc`
  rm -rf $runfile
  pstatdblog $1 2 $totime "Finish"
  if [ -f $ptlfile ]; then
    echo $totime >> $ptlfile
  else
    echo $totime > $ptlfile
  fi
  funavgtime $processname
  funproctime $vnamerun
  funcleanptimefile $1

#  set > /tmp/$vnamerun
}

chkmkdir /tmp/run
chkmkdir /tmp/ptlog

processname=`echo $0 | sed 's/.\///'`
runfile="/tmp/run/$processname"
ptlfile="/tmp/ptlog/$processname"
funstart $processname
checkprocess $processname $runfile
